[{"E:\\web design\\ReactJS\\search-countries\\src\\index.js":"1","E:\\web design\\ReactJS\\search-countries\\src\\App.js":"2","E:\\web design\\ReactJS\\search-countries\\src\\StateProvider.js":"3","E:\\web design\\ReactJS\\search-countries\\src\\reportWebVitals.js":"4","E:\\web design\\ReactJS\\search-countries\\src\\reducer.js":"5","E:\\web design\\ReactJS\\search-countries\\src\\CountryGrid.js":"6"},{"size":689,"mtime":1611410025778,"results":"7","hashOfConfig":"8"},{"size":7170,"mtime":1611424714121,"results":"9","hashOfConfig":"8"},{"size":399,"mtime":1611409976929,"results":"10","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"8"},{"size":405,"mtime":1611414672137,"results":"12","hashOfConfig":"8"},{"size":994,"mtime":1611414554172,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"18gxnmk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"E:\\web design\\ReactJS\\search-countries\\src\\index.js",[],["29","30"],"E:\\web design\\ReactJS\\search-countries\\src\\App.js",["31","32","33","34","35","36","37","38","39","40","41"],"import React, { useState, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CountryGrid from \"./CountryGrid\";\nimport { actionTypes } from \"./reducer\";\nimport { useStateValue } from \"./StateProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  field: {\n    backgroundColor: \"white\",\n    borderRadius: \"3px\",\n    margin: \"2px\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [lang, setLang] = useState(\"\");\n  const [curr, setCurr] = useState(\"\");\n  const [capital, setCapital] = useState(\"\");\n  const [callcode, setCallcode] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  const [regionbloc, setRegionbloc] = useState(\"\");\n  const [{ countries }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    handleChange();\n  }, [name, code, lang, curr, capital, callcode, region, regionbloc]);\n\n  const handleChange = async () => {\n    let arr = [];\n    await fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        data.map((doc) => {\n          if (arr.indexOf(doc.name) === -1) {\n            arr.push(doc.name);\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n    name &&\n      (await fetch(\"https://restcountries.eu/rest/v2/name/\" + name)\n        .then((response) => response.json())\n        .then((data) => {\n          let temp = [];\n          data.map((doc) => {\n            temp.push(doc.name);\n          });\n          arr = arr.filter((value) => temp.includes(value));\n        })\n        .catch((err) => console.log(err)));\n\n    code &&\n      (await fetch(\"https://restcountries.eu/rest/v2/alpha/\" + code)\n        .then((response) => response.json())\n        .then((doc) => {\n          if (arr.includes(doc.name)) {\n            arr = [doc.name];\n          }\n        })\n        .catch((err) => console.log(err)));\n\n    lang &&\n      (await fetch(\"https://restcountries.eu/rest/v2/lang/\" + lang)\n        .then((response) => response.json())\n        .then((data) => {\n          let temp = [];\n          data.map((doc) => {\n            temp.push(doc.name);\n          });\n          arr = arr.filter((value) => temp.includes(value));\n        })\n        .catch((err) => console.log(err)));\n\n    curr &&\n      (await fetch(\"https://restcountries.eu/rest/v2/currency/\" + curr)\n        .then((response) => response.json())\n        .then((data) => {\n          let temp = [];\n          data.map((doc) => {\n            temp.push(doc.name);\n          });\n          arr = arr.filter((value) => temp.includes(value));\n        })\n        .catch((err) => console.log(err)));\n\n    capital &&\n      (await fetch(\"https://restcountries.eu/rest/v2/capital/\" + capital)\n        .then((response) => response.json())\n        .then((data) => {\n          let temp = [];\n          data.map((doc) => {\n            temp.push(doc.name);\n          });\n          arr = arr.filter((value) => temp.includes(value));\n        })\n        .catch((err) => console.log(err)));\n    callcode &&\n      (await fetch(\"https://restcountries.eu/rest/v2/callingcode/\" + callcode)\n        .then((response) => response.json())\n        .then((data) => {\n          let temp = [];\n          data.map((doc) => {\n            temp.push(doc.name);\n          });\n          arr = arr.filter((value) => temp.includes(value));\n        })\n        .catch((err) => console.log(err)));\n    region &&\n      (await fetch(\"https://restcountries.eu/rest/v2/region/\" + region)\n        .then((response) => response.json())\n        .then((data) => {\n          let temp = [];\n          data.map((doc) => {\n            temp.push(doc.name);\n          });\n          arr = arr.filter((value) => temp.includes(value));\n        })\n        .catch((err) => console.log(err)));\n    regionbloc &&\n      (await fetch(\n        \"https://restcountries.eu/rest/v2/regionalbloc/\" + regionbloc\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          let temp = [];\n          data.map((doc) => {\n            temp.push(doc.name);\n          });\n          arr = arr.filter((value) => temp.includes(value));\n        })\n        .catch((err) => console.log(err)));\n    arr.sort();\n    dispatch({\n      type: actionTypes.SET_COUNTRIES,\n      countries: arr,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <TextField\n          id=\"name\"\n          color=\"primary\"\n          className={classes.field}\n          value={name}\n          autoComplete=\"new-text\"\n          label=\"Country Name\"\n          variant=\"filled\"\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        />\n        <TextField\n          id=\"code\"\n          color=\"primary\"\n          className={classes.field}\n          value={code}\n          autoComplete=\"new-text\"\n          label=\"Country Code\"\n          variant=\"filled\"\n          onChange={(e) => {\n            setCode(e.target.value);\n          }}\n        />\n        <TextField\n          id=\"lang\"\n          color=\"primary\"\n          className={classes.field}\n          value={lang}\n          autoComplete=\"new-text\"\n          label=\"Language\"\n          variant=\"filled\"\n          onChange={(e) => {\n            setLang(e.target.value);\n          }}\n        />\n        <TextField\n          id=\"curr\"\n          color=\"primary\"\n          className={classes.field}\n          value={curr}\n          autoComplete=\"new-text\"\n          label=\"Currency\"\n          variant=\"filled\"\n          onChange={(e) => {\n            setCurr(e.target.value);\n          }}\n        />\n        <TextField\n          id=\"capital\"\n          color=\"primary\"\n          className={classes.field}\n          value={capital}\n          autoComplete=\"new-text\"\n          label=\"Capital City\"\n          variant=\"filled\"\n          onChange={(e) => {\n            setCapital(e.target.value);\n          }}\n        />\n        <TextField\n          id=\"callcode\"\n          color=\"primary\"\n          className={classes.field}\n          value={callcode}\n          autoComplete=\"new-text\"\n          label=\"Calling Code\"\n          variant=\"filled\"\n          onChange={(e) => {\n            setCallcode(e.target.value);\n          }}\n        />\n        <TextField\n          id=\"region\"\n          color=\"primary\"\n          className={classes.field}\n          value={region}\n          autoComplete=\"new-text\"\n          label=\"Region\"\n          variant=\"filled\"\n          autoComplete=\"new-text\"\n          onChange={(e) => {\n            setRegion(e.target.value);\n          }}\n        />\n        <TextField\n          id=\"regionbloc\"\n          color=\"primary\"\n          className={classes.field}\n          value={regionbloc}\n          autoComplete=\"new-text\"\n          label=\"RegionalBlock\"\n          variant=\"filled\"\n          onChange={(e) => {\n            setRegionbloc(e.target.value);\n          }}\n        />\n        <h3>Enter Data to Filter</h3>\n      </div>\n      <div className=\"App-body\">\n        <CountryGrid />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\web design\\ReactJS\\search-countries\\src\\StateProvider.js",[],"E:\\web design\\ReactJS\\search-countries\\src\\reportWebVitals.js",[],"E:\\web design\\ReactJS\\search-countries\\src\\reducer.js",[],"E:\\web design\\ReactJS\\search-countries\\src\\CountryGrid.js",["42","43"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"30px\",\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#1976d2\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nexport default function CountryGrid() {\r\n  const classes = useStyles();\r\n  const [{ countries }, dispatch] = useStateValue();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        {countries.map((country) => {\r\n          return (\r\n            <Grid item xs={12} sm={6} lg={4}>\r\n              <Paper className={classes.paper}>{country}</Paper>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":27,"column":12,"nodeType":"50","messageId":"51","endLine":27,"endColumn":21},{"ruleId":"52","severity":1,"message":"53","line":31,"column":6,"nodeType":"54","endLine":31,"endColumn":69,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":38,"column":24,"nodeType":"58","messageId":"59","endLine":38,"endColumn":26},{"ruleId":"56","severity":1,"message":"57","line":50,"column":26,"nodeType":"58","messageId":"59","endLine":50,"endColumn":28},{"ruleId":"56","severity":1,"message":"57","line":72,"column":26,"nodeType":"58","messageId":"59","endLine":72,"endColumn":28},{"ruleId":"56","severity":1,"message":"57","line":84,"column":26,"nodeType":"58","messageId":"59","endLine":84,"endColumn":28},{"ruleId":"56","severity":1,"message":"57","line":96,"column":26,"nodeType":"58","messageId":"59","endLine":96,"endColumn":28},{"ruleId":"56","severity":1,"message":"57","line":107,"column":26,"nodeType":"58","messageId":"59","endLine":107,"endColumn":28},{"ruleId":"56","severity":1,"message":"57","line":118,"column":26,"nodeType":"58","messageId":"59","endLine":118,"endColumn":28},{"ruleId":"56","severity":1,"message":"57","line":131,"column":26,"nodeType":"58","messageId":"59","endLine":131,"endColumn":28},{"ruleId":"60","severity":1,"message":"61","line":227,"column":11,"nodeType":"62","endLine":227,"endColumn":34},{"ruleId":"48","severity":1,"message":"63","line":6,"column":10,"nodeType":"50","messageId":"51","endLine":6,"endColumn":21},{"ruleId":"48","severity":1,"message":"64","line":23,"column":25,"nodeType":"50","messageId":"51","endLine":23,"endColumn":33},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'countries' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleChange'. Either include it or remove the dependency array.","ArrayExpression",["67"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'actionTypes' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [name, code, lang, curr, capital, callcode, region, regionbloc, handleChange]",{"range":"70","text":"71"},[948,1011],"[name, code, lang, curr, capital, callcode, region, regionbloc, handleChange]"]